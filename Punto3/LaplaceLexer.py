# Generated from Laplace.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,21,115,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,
        1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,
        1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,
        1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,4,18,94,8,18,11,18,
        12,18,95,1,19,4,19,99,8,19,11,19,12,19,100,1,19,1,19,4,19,105,8,
        19,11,19,12,19,106,1,20,4,20,110,8,20,11,20,12,20,111,1,20,1,20,
        0,0,21,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
        25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,1,0,2,1,0,
        48,57,3,0,9,10,13,13,32,32,118,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
        0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
        0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,1,43,1,0,0,0,3,45,1,0,0,0,
        5,47,1,0,0,0,7,49,1,0,0,0,9,51,1,0,0,0,11,53,1,0,0,0,13,55,1,0,0,
        0,15,57,1,0,0,0,17,59,1,0,0,0,19,61,1,0,0,0,21,65,1,0,0,0,23,69,
        1,0,0,0,25,74,1,0,0,0,27,79,1,0,0,0,29,83,1,0,0,0,31,85,1,0,0,0,
        33,88,1,0,0,0,35,90,1,0,0,0,37,93,1,0,0,0,39,98,1,0,0,0,41,109,1,
        0,0,0,43,44,5,40,0,0,44,2,1,0,0,0,45,46,5,41,0,0,46,4,1,0,0,0,47,
        48,5,101,0,0,48,6,1,0,0,0,49,50,5,94,0,0,50,8,1,0,0,0,51,52,5,45,
        0,0,52,10,1,0,0,0,53,54,5,42,0,0,54,12,1,0,0,0,55,56,5,116,0,0,56,
        14,1,0,0,0,57,58,5,117,0,0,58,16,1,0,0,0,59,60,5,948,0,0,60,18,1,
        0,0,0,61,62,5,115,0,0,62,63,5,105,0,0,63,64,5,110,0,0,64,20,1,0,
        0,0,65,66,5,99,0,0,66,67,5,111,0,0,67,68,5,115,0,0,68,22,1,0,0,0,
        69,70,5,115,0,0,70,71,5,105,0,0,71,72,5,110,0,0,72,73,5,104,0,0,
        73,24,1,0,0,0,74,75,5,99,0,0,75,76,5,111,0,0,76,77,5,115,0,0,77,
        78,5,104,0,0,78,26,1,0,0,0,79,80,5,108,0,0,80,81,5,111,0,0,81,82,
        5,103,0,0,82,28,1,0,0,0,83,84,5,47,0,0,84,30,1,0,0,0,85,86,5,74,
        0,0,86,87,5,110,0,0,87,32,1,0,0,0,88,89,5,73,0,0,89,34,1,0,0,0,90,
        91,5,76,0,0,91,36,1,0,0,0,92,94,7,0,0,0,93,92,1,0,0,0,94,95,1,0,
        0,0,95,93,1,0,0,0,95,96,1,0,0,0,96,38,1,0,0,0,97,99,7,0,0,0,98,97,
        1,0,0,0,99,100,1,0,0,0,100,98,1,0,0,0,100,101,1,0,0,0,101,102,1,
        0,0,0,102,104,5,46,0,0,103,105,7,0,0,0,104,103,1,0,0,0,105,106,1,
        0,0,0,106,104,1,0,0,0,106,107,1,0,0,0,107,40,1,0,0,0,108,110,7,1,
        0,0,109,108,1,0,0,0,110,111,1,0,0,0,111,109,1,0,0,0,111,112,1,0,
        0,0,112,113,1,0,0,0,113,114,6,20,0,0,114,42,1,0,0,0,5,0,95,100,106,
        111,1,6,0,0
    ]

class LaplaceLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    LAPLACE = 18
    INT = 19
    FLOAT = 20
    WS = 21

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'e'", "'^'", "'-'", "'*'", "'t'", "'u'", "'\\u03B4'", 
            "'sin'", "'cos'", "'sinh'", "'cosh'", "'log'", "'/'", "'Jn'", 
            "'I'", "'L'" ]

    symbolicNames = [ "<INVALID>",
            "LAPLACE", "INT", "FLOAT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "LAPLACE", "INT", "FLOAT", 
                  "WS" ]

    grammarFileName = "Laplace.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


